# Chunk 4
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps))
ggplot(steps_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# Chunk 5
max_steps <- which(steps_daily_avg$steps %in% max(steps_daily_avg$steps))
as.character(steps_daily_avg[max_steps,1])
# Chunk 6
activity <- read.csv("activity.csv")
sum(is.na(activity$steps))
max_steps <- which(steps_int_avg$steps %in% max(steps_int_avg$steps))
as.character(steps_int_avg[max_steps,1])
activity_NA <- activity[which(is.na(activity$steps)),]
View(steps_int_avg)
?fill
??fill
str(coalesce)
coalesce(activity_NA)
coalesce(activity_NA, steps_int_avg$steps)
coalesce(activity_NA$steps, steps_int_avg$steps)
activity <- read.csv("activity.csv")
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps, na.rm = T))
View(steps_int_avg)
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps))
activity_NA <- activity[which(is.na(activity$steps)),]
steps_int_avg <- activity_NA %>%
group_by(interval) %>%
summarize(steps = mean(steps))
View(steps_int_avg)
# Chunk 1
activity <- read.csv("activity.csv")
activity <- na.omit(activity)
# Chunk 2
library(dplyr)
steps_daily <- activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
mean(steps_daily$steps)
median(steps_daily$steps)
# Chunk 3
library(ggplot2)
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black") +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
# Chunk 4
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps))
ggplot(steps_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# Chunk 5
max_steps <- which(steps_int_avg$steps %in% max(steps_int_avg$steps))
as.character(steps_int_avg[max_steps,1])
# Chunk 6
activity <- read.csv("activity.csv")
sum(is.na(activity$steps))
activity_NA <- activity[which(is.na(activity$steps)),]
View(activity_NA)
nrow(steps_int_avg)
nrow(activity_NA)
steps_int_avg$steps
rep(steps_int_avg$steps,4)
x <- rep(steps_int_avg$steps,4)
mean(x)
mean(steps_int_avg$steps)
group_by(activity_NA, activity_NA$date)
nrow(activity_NA)
nrow(activity_NA)/288
steps_int_avg$interval
i=1
activity_NA$interval[i]
activity_NA$interval[i] %in% steps_int_avg
activity_NA$interval[i] %in% steps_int_avg$interval
steps_int_avg$interval %in% activity_NA$interval[i]
which(steps_int_avg$interval %in% activity_NA$interval[i])
View(steps_int_avg)
steps_int_avg[which(steps_int_avg$interval %in% activity_NA$interval[i]),2]
as.numeric(steps_int_avg[which(steps_int_avg$interval %in% activity_NA$interval[i]),2])
for (i in 1:nrow(activity_NA)) {
activity_NA$interval[i] <- as.numeric(steps_int_avg[which(steps_int_avg$interval %in% activity_NA$interval[i]),2])
}
View(activity_NA)
activity_NA <- activity[which(is.na(activity$steps)),]
activity <- na.omit(activity)
for (i in 1:nrow(activity_NA)) {
activity_NA$steps[i] <- as.numeric(steps_int_avg[which(steps_int_avg$interval %in% activity_NA$interval[i]),2])
}
View(activity_NA)
activity <- rbind(activity_NA, activity)
View(activity)
filled_activity_NA <- activity_NA
# Chunk 1
activity <- read.csv("activity.csv")
activity <- na.omit(activity)
# Chunk 2
library(dplyr)
steps_daily <- activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
mean(steps_daily$steps)
median(steps_daily$steps)
# Chunk 3
library(ggplot2)
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black") +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
# Chunk 4
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps))
ggplot(steps_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# Chunk 5
max_steps <- which(steps_daily_avg$steps %in% max(steps_daily_avg$steps))
as.character(steps_daily_avg[max_steps,1])
# Chunk 6
activity <- read.csv("activity.csv")
sum(is.na(activity$steps))
activity_NA <- activity[which(is.na(activity$steps)),]
activity <- na.omit(activity)
filled_activity_NA <- activity_NA
for (i in 1:nrow(activity_NA)) {
filled_activity_NA$steps[i] <- as.numeric(steps_int_avg[which(steps_int_avg$interval %in% activity_NA$interval[i]),2])
}
filled_activity <- rbind(filled_activity_NA, activity)
View(filled_activity)
class(filled_activity)
mean(filled_activity)
mean(filled_activity$steps)
median(filled_activity$steps)
median(activity$steps)
mean(activity$steps)
activity <- read.csv("activity.csv")
activity <- na.omit(activity)
library(dplyr)
steps_daily <- activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
mean(steps_daily$steps)
median(steps_daily$steps)
steps_daily_filled <- filled_activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
mean(steps_daily)
mean(steps_daily$steps)
mean(steps_daily_filled$steps)
# Total number of steps before NA-fill
sum(steps_daily$steps)
# Total number of steps after NA-fill
sum(steps_daily_filled$steps)
weekdays(activity$date)
as.Date(activity$date)
activity$date <- weekdays(as.Date(activity$date))
activity$weekday <- weekdays(as.Date(activity$date))
# Chunk 1
activity <- read.csv("activity.csv")
activity <- na.omit(activity)
# Chunk 2
library(dplyr)
steps_daily <- activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
mean(steps_daily$steps)
median(steps_daily$steps)
# Chunk 3
library(ggplot2)
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black") +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
# Chunk 4
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps))
ggplot(steps_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# Chunk 5
max_steps <- which(steps_daily_avg$steps %in% max(steps_daily_avg$steps))
as.character(steps_daily_avg[max_steps,1])
# Chunk 6
activity <- read.csv("activity.csv")
sum(is.na(activity$steps))
# Chunk 7
activity_NA <- activity[which(is.na(activity$steps)),]
activity <- na.omit(activity)
filled_activity_NA <- activity_NA
for (i in 1:nrow(activity_NA)) {
filled_activity_NA$steps[i] <- as.numeric(steps_int_avg[which(steps_int_avg$interval %in% activity_NA$interval[i]),2])
}
filled_activity <- rbind(filled_activity_NA, activity)
# Chunk 8
# Summarize by date
steps_daily_filled <- filled_activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
# Compare steps_daily_filled with steps_daily (before NAs were filled)
mean(steps_daily$steps)
mean(steps_daily_filled$steps)
#
median(steps_daily$steps)
median(steps_daily_filled$steps)
# Chunk 9
# Total number of steps before NA-fill
sum(steps_daily$steps)
# Total number of steps after NA-fill
sum(steps_daily_filled$steps)
activity$weekday <- weekdays(as.Date(activity$date))
View(activity)
str(weekdays)
library(timeDate)
install.packages("timeDate")
isWeekday(as.Date(activity$date))
library(timeDate)
isWeekday(as.Date(activity$date))
ifelse(isWeekday(as.Date(activity$date)), "Weekday", "Weekend")
activity$weekday <- weekdays(as.Date(activity$date))
activity$weekdayss <- ifelse(isWeekday(as.Date(activity$date)), "Weekday", "Weekend")
View(activity)
# Chunk 1
activity <- read.csv("activity.csv")
activity <- na.omit(activity)
# Chunk 2
library(dplyr)
steps_daily <- activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
mean(steps_daily$steps)
median(steps_daily$steps)
# Chunk 3
library(ggplot2)
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black") +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
# Chunk 4
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps))
ggplot(steps_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# Chunk 5
max_steps <- which(steps_daily_avg$steps %in% max(steps_daily_avg$steps))
as.character(steps_daily_avg[max_steps,1])
# Chunk 6
activity <- read.csv("activity.csv")
sum(is.na(activity$steps))
# Chunk 7
activity_NA <- activity[which(is.na(activity$steps)),]
activity <- na.omit(activity)
filled_activity_NA <- activity_NA
for (i in 1:nrow(activity_NA)) {
filled_activity_NA$steps[i] <- as.numeric(steps_int_avg[which(steps_int_avg$interval %in% activity_NA$interval[i]),2])
}
filled_activity <- rbind(filled_activity_NA, activity)
# Chunk 8
# Summarize by date
steps_daily_filled <- filled_activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
# Compare steps_daily_filled with steps_daily (before NAs were filled)
mean(steps_daily$steps)
mean(steps_daily_filled$steps)
#
median(steps_daily$steps)
median(steps_daily_filled$steps)
# Chunk 9
# Total number of steps before NA-fill
sum(steps_daily$steps)
# Total number of steps after NA-fill
sum(steps_daily_filled$steps)
activity$weekday <- ifelse(isWeekday(as.Date(activity$date)), "Weekday", "Weekend")
activity$weekday <- as.Factor(ifelse(isWeekday(as.Date(activity$date)), "Weekday", "Weekend"))
activity$weekday <- as.factor(ifelse(isWeekday(as.Date(activity$date)), "Weekday", "Weekend"))
str(activity$weekday)
steps_week_avg <- activity %>%
group_by(weekday) %>%
summarize(steps = mean(steps))
View(steps_week_avg)
steps_week_avg <- activity %>%
group_by(weekday, interval) %>%
summarize(steps = mean(steps))
View(steps_week_avg)
steps_week_int_avg <- activity %>%
group_by(weekday, interval) %>%
summarize(steps = mean(steps))
library(timeDate)
activity$weekday <- as.factor(ifelse(isWeekday(as.Date(activity$date)), "Weekday", "Weekend"))
steps_week_int_avg <- activity %>%
group_by(weekday, interval) %>%
summarize(steps = mean(steps))
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# xlab("5-minute Interval") +
# ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# xlab("5-minute Interval") +
# ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# xlab("5-minute Interval") +
# ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
# xlab("5-minute Interval") +
# ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
View(steps_week_int_avg)
# xlab("5-minute Interval") +
# ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(. ~ weekday) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(vars(weekday)) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(vars(weekday), cols = c("green3", "blue3")) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(vars(weekday), cols = weeldays) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(vars(weekday), cols = weekday) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(vars(weekday), cols = vars(weekday)) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(vars(weekday)) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
facet_grid(vars(weekday)) +
geom_line(color = weekday) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
facet_grid(vars(weekday)) +
geom_line(color = vars(weekday)) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
ggplot(steps_week_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
facet_grid(vars(weekday)) +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
library(dplyr)
library(timeDate)
library(dplyr)
library(timeDate)
activity <- read.csv("activity.csv")
activity <- na.omit(activity)
steps_daily <- activity %>%
group_by(date) %>%
summarize(steps = sum(steps))
mean(steps_daily$steps)
median(steps_daily$steps)
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black") +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 40) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 10) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 1) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 10) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 100) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 1000) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 500) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 250) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 300) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
ggplot(steps_daily, aes(x = steps)) +
geom_histogram(fill = "green3", color = "black", binwidth = 400) +
xlab("Total steps per day") +
ylab("Frequency") +
ggtitle("Distribution of Total Number of Steps per Day") +
theme_minimal()
steps_int_avg <- activity %>%
group_by(interval) %>%
summarize(steps = mean(steps))
ggplot(steps_int_avg, aes(interval, steps)) +
geom_line(color = "green4") +
xlab("5-minute Interval") +
ylab("Average Steps per 5-minutes") +
ggtitle("Average Daily Activity Pattern") +
theme_minimal()
max_steps <- which(steps_int_avg$steps %in% max(steps_int_avg$steps))
as.character(steps_int_avg[max_steps,1])
activity <- read.csv("activity.csv")
sum(is.na(activity$steps))
which(steps_int_avg$steps %in% max(steps_int_avg$steps))
